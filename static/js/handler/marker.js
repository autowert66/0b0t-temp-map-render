MarkerHandler.prototype=new BaseHandler;function MarkerHandler(o,s){this.control=o,this.layerGroups={},this.markers=s,this.markersByGroup={},this.visible={}}MarkerHandler.prototype.onMapChange=function(o,s){for(const t in this.layerGroups)this.ui.lmap.removeLayer(this.layerGroups[t]);this.layerGroups={};const e=function(t,r,i){const a=i.pos,c=new L.Marker(t.mcToLatLng(a[0]+.5,a[1]+.5,a[2]),{title:i.title}),n=i.icon?i.icon:r.icon,p=i.iconSize?i.iconSize:r.iconSize;return n&&c.setIcon(new L.Icon({iconUrl:n.match(/^\w+:\/\//)?n:"static/markers/"+n,iconSize:p||[24,24]})),c.bindPopup(i.text?i.text:i.title),c};var u=this.ui.getCurrentMapConfig().world;for(const t of this.markers){const r=t.id;if(this.markersByGroup[r]=t,!(u in t.markers)){this.layerGroups[r]=L.layerGroup();continue}t.createMarker||(t.createMarker=e);const i=t.markers[u],a=L.layerGroup();for(const c of i){const n=t.createMarker(this.ui,t,c);n?.addTo(a)}this.layerGroups[r]=a,r in this.visible||(this.visible[r]=!0),"showDefault"in t&&!t.showDefault&&(this.control.uncheckGroup(r),this.visible[r]=!1)}for(const t in this.visible)this.show(t,this.visible[t]);this.updateMarkerCounts()},MarkerHandler.prototype.updateMarkerCounts=function(){const o=this.ui.getCurrentMapConfig().world,s=this.control.buttons;for(const e of s){const u=e.getAttribute("data-group");let t=0;o in this.markersByGroup[u].markers&&(t=this.markersByGroup[u].markers[o].length);const r=e.getElementsByTagName("span")[0];r.innerHTML=t}},MarkerHandler.prototype.getMarkerGroups=function(){return this.markers.map(o=>[o.id,o.name])},MarkerHandler.prototype.show=function(o,s){const e=this.layerGroups[o];s&&!this.ui.lmap.hasLayer(e)&&e.addTo(this.ui.lmap),!s&&this.ui.lmap.hasLayer(e)&&this.ui.lmap.removeLayer(e),this.visible[o]=s};
